#include "all.h"
#include "obj2d.h"

int     player_state;

int     Xpos;

#if 3
//******************************************************************************
// TODO:03 OBJ2D型の変数playerを宣言
//------------------------------------------------------------------------------
/*
課題）
    下記でOBJ2D型の変数playerを宣言しましょう。
*/
//******************************************************************************
#endif
//TODO_03

Sprite* sprBox;
Sprite* sprPlayer;

//--------------------------------------
//  プレイヤーの初期設定
//--------------------------------------
void player_init()
{
#if 5
//******************************************************************************
// TODO:05 プレイヤーの初期設定
//------------------------------------------------------------------------------
/*
課題）
    player_stateに0を設定しましょう。
*/
//******************************************************************************
#endif
    //TODO_05
    Xpos = 100;
}

//--------------------------------------
//  プレイヤーの終了処理
//--------------------------------------
void player_deinit()
{
#if 6
//******************************************************************************
// TODO:06 プレイヤーの終了処理
//------------------------------------------------------------------------------
/*
課題）
    下記でsprPlayerを破棄しましょう。
*/
//******************************************************************************
#endif
    //TODO_06
    safe_delete(sprBox);

}

//--------------------------------------
//  プレイヤーの更新処理
//--------------------------------------
void player_update()
{
    switch (player_state)
    {
    case 0:
        //////// 初期設定 ////////
#if 7
//******************************************************************************
// TODO:07 プレイヤーの画像を読み込む
//------------------------------------------------------------------------------
/*
課題）
    下記でplayerの画像を読み込みましょう。

    変数名：sprPlayer
    画像名：stickman.png
*/
//******************************************************************************
#endif
        //TODO_07
        sprBox = sprite_load(L"./Data/Images/right.png");

        ++player_state;
        /*fallthrough*/

    case 1:
        //////// パラメータの設定 ////////

#if 8
//******************************************************************************
// TODO:08 プレイヤーのパラメータの設定
//------------------------------------------------------------------------------
/*
課題）
    下記でplayerの初期設定をしていきましょう。[プリント参照]

手順）
    player = {};と記述して、全て0でクリアする
    プレイヤーのタイマー 0（一応）
    位置　　　           画面の中央
    スケール　           等倍
    画像位置　           今回は0, 0固定（一応）
    画像サイズ           TODO_04で定義したサイズ
    基準点　　           TODO_04で定義した基準点
    色　　　　           好きな色（自分で決めよう）
*/
//******************************************************************************
#endif
        //TODO_08

        ++player_state;
        /*fallthrough*/

    case 2:
        //////// 通常時 ////////
#if 16
//******************************************************************************
// TODO:16 Y方向・X方向の移動関数を呼ぶ
//------------------------------------------------------------------------------
/*
課題）
    下記でplayer_moveY関数と、player_moveX関数を呼びましょう。（Y → Xの順番で）

解説）
    ここはプレイヤーの更新関数です。
    Y軸方向（縦方向）の移動を制御するためのplayer_moveY関数と、X軸方向（横方向）
    の移動を制御するためのplayer_moveX関数の枠組みが用意されています。まずは、
    その関数を呼んでおきましょう。

    今回のプログラムではplayer_moveYとplayer_moveXで、プレイヤーがこの瞬間に、
    どれだけ移動するか（そのフレームでの速度）を算出します。その後、位置に速度を
    足し、地面とのあたり判定や、エリア外に出ないかチェックなどを行っていきます。
*/
//******************************************************************************
#endif
        //TODO_16 Y方向・X方向の移動関数を呼び、1フレームあたりの速度を求める


        //予備課題：ジャンプ処理

        if (TRG(0)&PAD_RIGHT) {
            Xpos += 200;
        }
        if (TRG(0)&PAD_LEFT) {
            Xpos -= 200;
        }

        if (Xpos < 100) {
            Xpos = 900;
        }
        if (Xpos > 900)
        {
            Xpos = 100;
        }

#if 18
//******************************************************************************
// TODO:18 位置に速度を足す
//------------------------------------------------------------------------------
/*
課題）
    下記でプレイヤーの位置に速度を足しましょう。

解説）
    posもspeedもVECTOR2型です。VECTOR2型同士そのまま足し算などができます。
    （xにxを、yにyを足しても同じですが、分ける必要はありません）
*/
//******************************************************************************
#endif
        //TODO_18 位置に速度を足す


#if 20
//******************************************************************************
// TODO:20 地面とのあたり判定（仮）
//------------------------------------------------------------------------------
/*
課題）
    プレイヤーのy座標がGROUND_Yを超えている場合、プレイヤーのy座標にGROUND_Yを
    代入し、超えないようにしましょう。また、その際にY方向の速度に0.0fを代入して
    おきましょう。
*/
//******************************************************************************
#endif
        //TODO_20 地面とのあたり判定（仮）


#if 24
//******************************************************************************
// TODO:24 プレイヤーの左右のエリアチェック
//------------------------------------------------------------------------------
/*
課題）
    プレイヤーが画面からはみ出ないようにしましょう。

    プレイヤーのX座標の最小値：PLAYER_TEX_W * 0.5f
    プレイヤーのX座標の最大値：SCREEN_W - PLAYER_TEX_W * 0.5f

    ※左右の限界値をplayer.hに、定数として定義してみましょう。
*/
//******************************************************************************
#endif
        //TODO_24 プレイヤーの左右のエリアチェック


        break;
    }
}

void player_render()
{
    sprite_render(sprBox, (float)Xpos, 400);
}

void player_moveY()
{

}

void player_moveX()
{

}
